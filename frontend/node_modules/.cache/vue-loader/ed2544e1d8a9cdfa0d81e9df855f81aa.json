{"remainingRequest":"C:\\Users\\admin\\Desktop\\bt\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\bt\\frontend\\src\\views\\BoardModerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\bt\\frontend\\src\\views\\BoardModerator.vue","mtime":1696957694338},{"path":"C:\\Users\\admin\\Desktop\\bt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696957888019},{"path":"C:\\Users\\admin\\Desktop\\bt\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1696957890699},{"path":"C:\\Users\\admin\\Desktop\\bt\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696957888019},{"path":"C:\\Users\\admin\\Desktop\\bt\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1696957893476}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'Moderator',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n",{"version":3,"sources":["BoardModerator.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardModerator.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <header class=\"jumbotron\">\n      <h3>{{content}}</h3>\n    </header>\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'Moderator',\n  data() {\n    return {\n      content: ''\n    };\n  },\n  mounted() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.content = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  }\n};\n</script>\n"]}]}